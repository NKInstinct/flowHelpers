% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_to_seurat.R
\name{gs_to_seurat}
\alias{gs_to_seurat}
\title{Convert GatingSet to Seurat and add metadata.}
\usage{
gs_to_seurat(gs, node = "root", invert = FALSE, edit_metadata = FALSE)
}
\arguments{
\item{gs}{The GatingSet to take data from}

\item{node}{Character vector specifying a (nonredundant) node in the
GatingSet to use for data extraction. Defaults to "root" (all events in
GatingSet).}

\item{invert}{Boolean specifying whether transformations should be inverted.
Defaults to FALSE since the default gs_create also doesn't do any
transformations, but if your gs has transformed data, you should invert it
here before proceeding.}

\item{edit_metadata}{Boolean specifying whether an interactive
DataEditR-powered window should be invoked to add metadata to the Seurat
object directly. Convenient but unstable due to rhandsontable dependency
weirdness, so FALSE by default. Set to true if you like debugging more than
you like S4 object interaction.}
}
\description{
This function outputs a Seurat object based on a provided GatingSet and
(optionally) a node within the GatingSet to draw data from. The output is a
Seurat object, and the function prompts the next steps in completing the
Seurat analysis.
}
\details{
Note that as part of this call, gs_to_seurat will prompt for user input to
add metadata to the created Seurat object. Right-cliking on a cell in the
created shiny window will allow you to add columns to the datatable, which
can then be given colnames and values interactively. When finished,
gs_to_seurat will apply all of the created metadata columns to the Seurat
object as a separate metadata entry with the colname as a name - this can be
useful for downstream regression and labeling.
}
